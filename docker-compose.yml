services:
  #myproger.micro.identity:
  #  image: myproger.micro.identity:latest
  #  build:
  #    context: .
  #    dockerfile: MyProger.Micro.Identity/Dockerfile
  #    
  #myproger.micro.companyapi:
  #  image: myproger.micro.companyapi:latest
  #  build:
  #    context: .
  #    dockerfile: MyProger.Micro.CompanyAPI/Dockerfile

 #myproger.micro.joblistapi:
 #  image: myproger.micro.joblistapi:latest
 #  build:
 #    context: .
 #    dockerfile: MyProger.Micro.JobListAPI/Dockerfile
 #  ports:
 #    - 8050:85
      
  #myproger.mciro.searchapi:
  #  image: myproger.mciro.searchapi:latest
  #  build:
  #    context: .
  #    dockerfile: MyProger.Mciro.SearchAPI/Dockerfile
      
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    ports:
      - 9200:9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    networks:
      - elastic
      
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.9.2
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://localhost:9200
    networks:
      - elastic
  
  prometheus:
    image: prom/prometheus:latest
    restart: always
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml

  grafana:
    image: grafana/grafana:latest
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ./grafana.ini:/etc/grafana/grafana.ini

networks:
  elastic:
    driver: bridge

volumes:
  elasticsearch-data: