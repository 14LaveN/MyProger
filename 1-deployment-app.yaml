kind: Deployment
apiVersion: apps/v1
metadata:
  name: metricsdemo
  labels:
    app: web
spec:
  replicas: 2 # сколько подов поднять (инстансов запущенных приложений)
  
  # селектор решает, на какие шаблоны распространяется деплой
  selector:
    matchLabels:
      app: metricsdemo
  
  template:
    metadata:
      labels:
        app: metricsdemo # по этой метке ищет selector в kind: Service
    spec:
      containers:
        - name: metricsdemo # имя деплоя
          image: localhost:5000/sansys/metricsdemo3 # образ в докере
          ports:
            - containerPort: 80 # какой порт слушает приложение внутри докера

# ВАЖНО: три дефиса делят файл, как бы на два отдельных ямла
---

kind: Service
apiVersion: v1
metadata:
  name: metricsdemo # имя для прометеуса __meta_kubernetes_service_name="metricsdemo", см https://prometheus.io/docs/prometheus/latest/configuration/configuration/#kubernetes_sd_config
  labels:
    apptype: business # имя для прометеуса __meta_kubernetes_service_label_apptype="business" - запомни
    instancetype: web # имя для прометеуса __meta_kubernetes_service_label_instancetype="web"
spec:
  selector:
    app: metricsdemo # селектор приложений по labels:app
  type: LoadBalancer # реверспрокси из вне до подов
  ports:
    - protocol: TCP # имя для прометеуса _meta_kubernetes_service_port_protocol="TCP"
      port: 9376
      targetPort: 80
      name: portapi # имя для прометеуса __meta_kubernetes_service_port_name="portapi"